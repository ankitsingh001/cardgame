/*
 * ClientStart.java
 *
 * Created on February 24, 2015, 7:47 PM
 */

package client;

import java.io.*;
import java.net.*;
import java.util.*;
/**
 *
 * @author  javastudent
 */
public class ClientStart extends javax.swing.JFrame {
    
    /** Creates new form ClientStart */
    String player_name;
    static public int flag=1;
    static String address="localhost";
    private static final int PORTNUM=1234;
    public static Socket socket=null;
    public static ObjectInputStream fromserver;
    public static ObjectOutputStream toserver;
    static ShareMsg obj,obj2;
    public ClientStart() {
        initComponents();
        jLabel3.setVisible(false);
        obj=new ShareMsg();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24));
        jLabel1.setText("Game of Throws");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(110, 40, 220, 60);

        jLabel2.setText("Player Name:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(55, 135, 110, 20);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        getContentPane().add(jTextField1);
        jTextField1.setBounds(210, 130, 110, 20);

        jLabel3.setText("Waiting for the other player...");
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(120, 180, 190, 15);

        jLabel4.setText("Created By :  Shruti Katre ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 220, 260, 15);

        jLabel5.setText("Ankit Singh");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(110, 240, 110, 15);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-400)/2, (screenSize.height-300)/2, 400, 300);
    }//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        player_name=jTextField1.getText();
        obj.setName(player_name);            
        System.out.println("Connection established");
        jLabel3.setVisible(true);
        flag=2;
    }//GEN-LAST:event_jTextField1ActionPerformed
    
    public static void connect()
    {
        try
        {
            sop("In connect");
            ShareMsg obj2=new ShareMsg();
//            socket=new Socket(address,PORTNUM);
//            toserver=new ObjectOutputStream(socket.getOutputStream());
//            fromserver=new ObjectInputStream(socket.getInputStream());
            toserver.writeObject(obj);
            System.out.println("Object sent successfully");
            //obj=(ShareMsg) fromserver.readObject();
            //System.out.println(obj.username);
                        
            Object object= fromserver.readObject();
            if(object instanceof ShareMsg)
            {
                obj2=(ShareMsg)object;
            }
            
            System.out.println(obj2.username+"after read");
            //this.setVisible(false);
            ClientGUI cgui=new ClientGUI(obj2);
            cgui.show();
            
        }
        catch(IOException e)
        {
            System.out.println("Error in IO "+e.toString());
        }
        catch(ClassNotFoundException c)
        {
            System.out.println("Error in Class "+ c.toString());
        }
    }
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    static public void sop(String msg)
    {
        System.out.println(msg);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        ClientStart cli=new ClientStart();
        Deck d1=new Deck();
        d1.printall();
        cli.setVisible(true);
        
        try
        {
            socket=new Socket(address,PORTNUM);
            toserver=new ObjectOutputStream(socket.getOutputStream());
            fromserver=new ObjectInputStream(socket.getInputStream());
        }
        catch(Exception e)
        {
            
        }
        sop("Before while");
        while(flag==1)
        {
           
        }
        connect();
        
        cli.setVisible(false);
        
        sop("In main");
        
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    
}
